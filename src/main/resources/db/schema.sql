drop table if exists purchases;
drop table if exists tickets;
drop table if exists reservations;
drop table if exists employees;
drop table if exists customers;
drop table if exists user_roles;
drop table if exists users;
drop table if exists places;
drop table if exists film_screenings;
drop table if exists halls;
drop table if exists filmmaker_posts;
drop table if exists filmmakers;
drop table if exists film_posters;
drop table if exists country_film;
drop table if exists films;
drop table if exists countries;
drop table if exists age_limits;

CREATE TABLE IF NOT EXISTS age_limits
(
    id varchar(255) PRIMARY KEY NOT NULL,
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    description varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    start_age integer NOT NULL
);

CREATE TABLE IF NOT EXISTS countries
(
    code varchar(255) PRIMARY KEY NOT NULL,
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    full_name varchar(255) NOT NULL,
    short_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    date_local_premiere timestamp with time zone NOT NULL,
    name varchar(255) NOT NULL,
    plot text NOT NULL DEFAULT '',
    date_world_premiere timestamp with time zone,
    age_limit_id varchar(255) NOT NULL REFERENCES age_limits(id)
);

CREATE TABLE IF NOT EXISTS country_film
(
    id bigint PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (INCREMENT 1 START 1 MINVALUE 1),
    film_id bigint NOT NULL REFERENCES films(id),
    country_code varchar(255) NOT NULL REFERENCES countries(code)
);

CREATE TABLE IF NOT EXISTS film_posters
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    filename varchar(255) NOT NULL ,
    film_id bigint NOT NULL REFERENCES films(id)
);

CREATE TABLE IF NOT EXISTS filmmakers
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    first_name varchar(255) NOT NULL,
    last_name varchar(255) NOT NULL,
    patronymic varchar(255),
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS filmmaker_posts
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    name varchar(255) NOT NULL ,
    filmmaker_id bigint NOT NULL REFERENCES filmmakers(id),
    film_id bigint NOT NULL REFERENCES films(id),
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS halls
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_screenings
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    date timestamp with time zone NOT NULL ,
    film_id bigint NOT NULL REFERENCES films(id),
    hall_id bigint NOT NULL REFERENCES halls(id),
    price numeric(10, 4) NOT NULL DEFAULT 0
);


CREATE TABLE IF NOT EXISTS places
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) not null ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    unused boolean NOT NULL NOT NULL DEFAULT FALSE,
    "number" varchar(255) NOT NULL,
    "row" varchar(255) NOT NULL,
    hall_id bigint NOT NULL REFERENCES halls(id)
);

CREATE TABLE IF NOT EXISTS users
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    hash_password varchar(255) NOT NULL ,
    user_status varchar(255) NOT NULL ,
    username varchar(255) NOT NULL ,
    first_name varchar(255) NOT NULL ,
    last_name varchar(255) NOT NULL ,
    patronymic varchar(255),
    gender varchar(255) NOT NULL,
    birth_date timestamp with time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS user_roles
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    role varchar(255) NOT NULL,
    user_id bigint NOT NULL REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS customers
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    user_id bigint NOT NULL REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS employees
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone DEFAULT current_timestamp,
    update_date timestamp with time zone,
    post varchar(255) NOT NULL,
    user_id bigint NOT NULL REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS reservations
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL ,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    expiry_date timestamp with time zone NOT NULL,
    customer_id bigint NOT NULL REFERENCES customers(id),
    film_screening_id bigint NOT NULL REFERENCES film_screenings(id),
    place_id bigint NOT NULL REFERENCES places(id)
);

CREATE TABLE IF NOT EXISTS tickets
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    film_screening_id bigint NOT NULL REFERENCES film_screenings(id),
    customer_id bigint NOT NULL REFERENCES customers(id),
    place_id bigint NOT NULL REFERENCES places(id)
);

CREATE TABLE IF NOT EXISTS purchases
(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1),
    customer_id bigint NOT NULL REFERENCES customers(id),
    ticket_id bigint NOT NULL REFERENCES tickets(id),
    price numeric(10, 4) NOT NULL DEFAULT 0,
    insert_date timestamp with time zone NOT NULL DEFAULT current_timestamp,
    update_date timestamp with time zone,
    disable_date timestamp with time zone,
    status varchar(255) NOT NULL
);
